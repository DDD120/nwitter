{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweets.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","onClink","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","alt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","for","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","Profile","refreshUser","history","useHistory","disyplayName","newDisplayName","setNewDisplayName","displayName","updateProfile","getMyNweets","where","get","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8e44b48.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"authForm\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        {error && <p>{error}</p>}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"center\">\r\n        <AuthForm />\r\n        <div className=\"social\">\r\n          <button onClink={onSocialClick} name=\"google\">\r\n            Continue with Google\r\n          </button>\r\n          <button onClink={onSocialClick} name=\"github\">\r\n            Continue with Github\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweetBox\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit yout nweet\"\r\n              value={newNweet}\r\n              required\r\n              onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n            <button onClick={toggleEditing}>Cancel</button>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img\r\n              src={nweetObj.attachmentUrl}\r\n              width=\"50px\"\r\n              height=\"50px\"\r\n              alt={nweetObj.text}\r\n            />\r\n          )}\r\n          {isOwner && (\r\n            <div>\r\n              <button onClick={onDeleteClick}>Delete</button>\r\n              <button onClick={toggleEditing}>Edit</button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(null);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"form\">\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <div className=\"nweetFactoryFooter\">\r\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} id=\"file\" />\r\n        <label for=\"file\">\r\n          <ImageIcon className=\"file\" />\r\n        </label>\r\n        <input type=\"submit\" id=\"submit\" />\r\n        <label for=\"submit\">Nweet</label>\r\n      </div>\r\n      {attachment && (\r\n        <div className=\"attachment\">\r\n          <img src={attachment} width=\"50px\" height=\"50px\" alt={userObj.uid} />\r\n          <button onClick={onClearAttachment}>X</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Nweet from \"components/Nweets\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div className=\"nweets\">\r\n          {nweets.map((nweet) => (\r\n            <Nweet\r\n              key={nweet.id}\r\n              nweetObj={nweet}\r\n              isOwner={nweet.creatorId === userObj.uid}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.disyplayName);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container profile\">\r\n      <form onSubmit={onSubmit} className=\"ProfileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n        <button onClick={onLogOutClick}>Log Out</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav className=\"nav\">\r\n    <div className=\"container\">\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">\r\n            <HomeIcon className=\"iconHome\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\" className=\"profile\">\r\n            {userObj.displayName}의 Profile\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n    console.log(userObj);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <footer>&copy: {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}